	LDA BRDLOOP 
	STA ZERO
GAMELOOP LDA P
	OTC
	LDA ROUNDCOUNT
	BRZ P1
	SUB ONE
	STA ROUNDCOUNT
	LDA O //P2
	STA NC
	LDA PLAYER2
	BRA P2END
P1	ADD ONE
	STA ROUNDCOUNT
	LDA X
	STA NC
	LDA PLAYER1
P2END	OTC //OUTPUTS PLAYER NUMBER
BRDLOOP	LDA COLON
	OTC
	LDA BRDLOOP
	ADD ONE
	STA BRDLOOP
	LDA BOARDPOS
	SUB ONE
	STA BOARDPOS
	BRP BRDLOOP
	LDA BPCONST
	STA BOARDPOS
FREEFALSE INP 
	SUB ONE	
    	STA PLYERMOV
    	BRP LOSSBR //If the player inputs a number lower than 0, they forfeit and lose
	LDA ROUNDCOUNT
    	OUT //Output the loser and then quit
    	HLT
LOSSBR	LDA INPBR
	ADD PLYERMOV //MAKE LOOP THAT OUTPUTS SPACE FOR 13 TIMES TO CLEAR BOARD FOR NEXT TURN
	STA INPBR
    	LDA INPCHK
	ADD PLYERMOV 
	STA INPCHK
INPCHK	LDA X0Y0    
    	SUB DOT
    	BRZ FREETRUE 
    	LDA INPBR
	SUB PLYERMOV
	STA INPBR //RESET INPBR
    	LDA INPCHK
    	SUB PLYERMOV
    	STA INPCHK
    	BRA FREEFALSE
FREETRUE LDA CLRCNST
	STA CLEAR
CLEARLOOP LDA SPACE
	OTC
	LDA CLEAR
	SUB ONE
	STA CLEAR
	BRP CLEARLOOP
  	LDA NC
INPBR 	STA X0Y0
	LDA INPBR
	SUB PLYERMOV
	STA INPBR //RESET INPBR
    	LDA INPCHK
    	SUB PLYERMOV
    	STA INPCHK
    	LDA ZERO
    	STA BRDLOOP
    	BRA GAMELOOP

COLON	DAT 58 //ASCII ":"
SPACE	DAT 32 //ASCII " " (SPACE)
X0Y0    DAT 46 //BOARD BEGIN
X1Y0    DAT 46
X2Y0    DAT 46
Y1	DAT 32
X0Y1    DAT 46
X1Y1    DAT 46
X2Y1    DAT 46
Y2	DAT 32
X0Y2    DAT 46
X1Y2    DAT 46
X2Y2    DAT 46
BOARDPOS DAT 12
BPCONST	DAT 12 //const version of above variable so we can reset it
P       DAT 80 //ASCII "P"
PLAYER1 DAT 49 //ASCII "1"
PLAYER2 DAT 50 //ASCII "2"
PLYERMOV DAT 0
ROUNDCOUNT DAT 0 //0: player 1's turn, 1: player 2's turn
NC	DAT 0 //controls whether we output "X" (88 (player 1)) or "O" (79 (player 2))
X	DAT 88
O	DAT 79
ONE 	DAT 1
CLEAR	DAT 16
CLRCNST DAT 16 //CONST VALUE FOR RESETTING THE CLEAR VALUE
ZERO	DAT 0
DOT 	DAT 46 //ASCII ".", USED TO CHECK IF CURRENT SPACE IS FREE
